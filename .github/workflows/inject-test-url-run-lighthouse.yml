name: Inject Test URL into PR Body and Run Lighthouse Test

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  update-pr-description:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Update PR description with test URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const headBranch = pr.head.ref;

            const marker = 'DO NOT EDIT BELOW THIS LINE';
            const separator = '--------------------------------------------------------------';
            const testUrl = `https://devopsdrops.tech/syncproxy?url=https://${headBranch}--eds--jhuckins.aem.page`;

            const dynamicBlock = `${marker}\n${separator}\nTest URL:\n${testUrl}`;
            let newBody;

            // If the marker already exists, replace everything below it
            if (pr.body && pr.body.includes(marker)) {
              newBody = pr.body.split(marker)[0].trim() + '\n\n' + dynamicBlock;
            } else {
              // Otherwise, just append the block
              newBody = (pr.body || '').trim() + '\n\n' + dynamicBlock;
            }

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: newBody
            });
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Extract test URL from PR description
        id: extract
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_DESC=$(gh pr view ${{ github.event.pull_request.number }} --json body -q .body)
          echo "PR_DESC: $PR_DESC"
         
          # extract URL after the marker line
          TEST_URL=$(echo "$PR_DESC" | sed -n '/DO NOT EDIT BELOW THIS LINE/,$p' | grep -oE 'https?://[a-zA-Z0-9./\-\_\~\?\=]*')
         
          if [ -z "$TEST_URL" ]; then
            echo "No test URL found in PR description."
            exit 1
          fi
          echo "TEST_URL=$TEST_URL" >> $GITHUB_OUTPUT

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse CI on URL
        run: |
          lhci collect --url=${{ steps.extract.outputs.TEST_URL }}
