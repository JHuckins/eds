name: Inject Test URL into PR Body and Run Lighthouse Test

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  update-pr-description:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      updated-url: ${{ steps.update-pr.outputs.test_url }}
    steps:
      - name: Update PR description with test URL
        id: update-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const headBranch = pr.head.ref;

            const marker = 'DO NOT EDIT BELOW THIS LINE';
            const separator = '--------------------------------------------------------------';
            const testUrl = `https://devopsdrops.tech/syncproxy?url=https://${headBranch}--eds--jhuckins.aem.page`;

            const dynamicBlock = `${marker}\n${separator}\nTest URL:\n${testUrl}`;
            let newBody;

            // If the marker already exists, replace everything below it
            if (pr.body && pr.body.includes(marker)) {
              newBody = pr.body.split(marker)[0].trim() + '\n\n' + dynamicBlock;
            } else {
              // Otherwise, just append the block
              newBody = (pr.body || '').trim() + '\n\n' + dynamicBlock;
            }

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: newBody
            });

            core.setOutput('test_url', testUrl);

  lighthouse:
    needs: update-pr-description
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Install Lighthouse CI
      run: |
        npm install -g @lhci/cli
    - name: Run LHCI (Mobile)
      run: |
        lhci collect \
          --url=${{ needs.update-pr-description.outputs.updated-url }} \
          --settings.emulatedFormFactor=mobile \
          --settings.screenEmulation.mobile=true \
          --settings.throttlingMethod=devtools

    - name: Rename Mobile Output
      run: |
        mkdir lhci-mobile
        ls -al
        for file in .lighthouseci; do
            if [[ $file == *.json ]]; then
              mv $file "lhci-mobile/lighthouse.mobile.report.json"
            fi
            if [[ $file == *.html ]]; then
              mv $file "lhci-mobile/lighthouse.mobile.report.html"
            fi
        done
        
    - name: Run LHCI (Desktop)
      run: |
        mkdir lhci-desktop
        lhci collect \
          --url=${{ needs.update-pr-description.outputs.updated-url }} \
          --settings.emulatedFormFactor=desktop \
          --settings.screenEmulation.mobile=false \
          --settings.throttlingMethod=devtools \
          --outputDir=./lhci-desktop

    - name: Rename Desktop Output
      run: |
        mv lhci-desktop/manifest.json lhci-desktop/manifest.desktop.json
        mv lhci-desktop/*.report.json lhci-desktop/lighthouse.desktop.report.json
        mv lhci-desktop/*.report.html lhci-desktop/lighthouse.desktop.report.html

    - name: Extract Lighthouse Desktop scores
      id: desktop-scores
      run: |
        ls -al
        SCORE_FILE=.lighthouseci/lighthouse.desktop.report.json
        DESKTOP-PERFORMANCE=$(jq '.categories.performance.score * 100 | floor' $SCORE_FILE)
        DESKTOP-ACCESSIBILITY=$(jq '.categories.accessibility.score * 100 | floor' $SCORE_FILE)
        DESKTOP-BEST_PRACTICES=$(jq '.categories["best-practices"].score * 100 | floor' $SCORE_FILE)
        DESKTOP-SEO=$(jq '.categories.seo.score * 100 | floor' $SCORE_FILE)

        echo "perf=$DESKTOP-PERFORMANCE" >> $GITHUB_OUTPUT
        echo "access=$DESKTOP-ACCESSIBILITY" >> $GITHUB_OUTPUT
        echo "best=$DESKTOP-BEST_PRACTICES" >> $GITHUB_OUTPUT
        echo "seo=$DESKTOP-SEO" >> $GITHUB_OUTPUT    
      
    - name: Extract Lighthouse Mobile scores
      id: mobile-scores
      run: |
        ls -al
        SCORE_FILE=.lighthouseci/lighthouse.mobile.report.json
        MOBILE-PERFORMANCE=$(jq '.categories.performance.score * 100 | floor' $SCORE_FILE)
        MOBILE-ACCESSIBILITY=$(jq '.categories.accessibility.score * 100 | floor' $SCORE_FILE)
        MOBILE-BEST_PRACTICES=$(jq '.categories["best-practices"].score * 100 | floor' $SCORE_FILE)
        MOBILE-SEO=$(jq '.categories.seo.score * 100 | floor' $SCORE_FILE)

        echo "perf=$MOBILE-PERFORMANCE" >> $GITHUB_OUTPUT
        echo "access=$MOBILE-ACCESSIBILITY" >> $GITHUB_OUTPUT
        echo "best=$MOBILE-BEST_PRACTICES" >> $GITHUB_OUTPUT
        echo "seo=$MOBILE-SEO" >> $GITHUB_OUTPUT

    - name: Comment Lighthouse summary on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const body = `
          ### Lighthouse Audit Report

          **Tested URL:** [${{ needs.update-pr-description.outputs.updated-url }}](${{ needs.update-pr-description.outputs.updated-url }})

          ## Desktop
          | Category    | Score |
          |----------------|-------|
          | Performance  | ${{ steps.desktop-scores.outputs.perf }} |
          | Accessibility | ${{ steps.desktop-scores.outputs.access }} |
          | Best Practices | ${{ steps.desktop-scores.outputs.best }} |
          | SEO      | ${{ steps.desktop-scores.outputs.seo }} |
          
          ## Mobile
          | Category    | Score |
          |----------------|-------|
          | Performance  | ${{ steps.mobile-scores.outputs.perf }} |
          | Accessibility | ${{ steps.mobile-scores.outputs.access }} |
          | Best Practices | ${{ steps.mobile-scores.outputs.best }} |
          | SEO      | ${{ steps.mobile-scores.outputs.seo }} |

          [Full HTML Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;

          const { owner, repo } = context.repo;
          const prNumber = context.payload.pull_request.number;

          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: prNumber,
            body
          });
